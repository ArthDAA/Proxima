import React from 'react';
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Users, Calendar, MessageSquare, ArrowRight, Copy, Check } from "lucide-react";
import { format } from "date-fns";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";

export default function MediationCard({ mediation, currentUser, onUpdate }) {
  const [copied, setCopied] = React.useState(false);

  const getStatusColor = (status) => {
    switch (status) {
      case "waiting_participants":
        return "bg-yellow-100 text-yellow-800 border-yellow-200";
      case "analysis":
        return "bg-blue-100 text-blue-800 border-blue-200";
      case "group_discussion":
        return "bg-purple-100 text-purple-800 border-purple-200";
      case "resolved":
        return "bg-green-100 text-green-800 border-green-200";
      default:
        return "bg-gray-100 text-gray-800 border-gray-200";
    }
  };

  const getStatusText = (status) => {
    switch (status) {
      case "waiting_participants":
        return "En attente de participants";
      case "analysis":
        return "Phase d'analyse";
      case "group_discussion":
        return "Discussion de groupe";
      case "resolved":
        return "Résolue";
      default:
        return "Active";
    }
  };

  const copyCode = () => {
    navigator.clipboard.writeText(mediation.mediation_code);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  const participantCount = mediation.participants ? mediation.participants.length : 0;

  return (
    <Card className="hover:shadow-lg transition-all duration-200">
      <CardHeader>
        <div className="flex justify-between items-start">
          <div className="flex-1 min-w-0">
            <CardTitle className="text-lg mb-2" style={{ color: 'var(--foreground)' }}>
              {mediation.title}
            </CardTitle>
            <p className="text-sm mb-3" style={{ color: 'var(--muted-foreground)' }}>
              {mediation.subject}
            </p>
            <div className="flex flex-wrap items-center gap-2">
              <Badge className={getStatusColor(mediation.status)}>
                {getStatusText(mediation.status)}
              </Badge>
              <div className="flex items-center gap-1 text-xs" 
                   style={{ color: 'var(--muted-foreground)' }}>
                <Users className="w-3 h-3" />
                {participantCount} participant{participantCount > 1 ? 's' : ''}
              </div>
              <div className="flex items-center gap-1 text-xs" 
                   style={{ color: 'var(--muted-foreground)' }}>
                <Calendar className="w-3 h-3" />
                {format(new Date(mediation.created_date), 'dd/MM/yyyy')}
              </div>
            </div>
          </div>
        </div>
      </CardHeader>

      <CardContent>
        <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
          <div className="flex-1">
            {mediation.status === "waiting_participants" && (
              <div className="flex items-center gap-2">
                <span className="text-sm font-medium" 
                      style={{ color: 'var(--foreground)' }}>
                  Code: 
                </span>
                <code className="px-2 py-1 rounded text-sm font-mono"
                      style={{ 
                        backgroundColor: 'var(--accent)',
                        color: 'var(--foreground)' 
                      }}>
                  {mediation.mediation_code}
                </code>
                <Button
                  variant="ghost"
                  size="icon"
                  onClick={copyCode}
                  disabled={copied}
                  className="h-6 w-6"
                >
                  {copied ? <Check className="w-3 h-3" /> : <Copy className="w-3 h-3" />}
                </Button>
              </div>
            )}
          </div>

          <div className="flex gap-2">
            <Link to={createPageUrl(`MediationChat?id=${mediation.id}`)}>
              <Button
                size="sm"
                style={{
                  backgroundColor: 'var(--primary)',
                  color: 'var(--primary-foreground)'
                }}
              >
                <MessageSquare className="w-4 h-4 mr-2" />
                Accéder
                <ArrowRight className="w-4 h-4 ml-2" />
              </Button>
            </Link>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}