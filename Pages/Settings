import React, { useState, useEffect } from "react";
import { User } from "@/entities/User";
import { Button } from "@/components/ui/button";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Settings as SettingsIcon, User as UserIcon, Heart, Save } from "lucide-react";

export default function SettingsPage() {
  const [user, setUser] = useState(null);
  const [preferences, setPreferences] = useState({
    ai_personality: "empathique",
    communication_style: "doux",
    notifications: "enabled"
  });
  const [isLoading, setIsLoading] = useState(false);
  const [isSaved, setIsSaved] = useState(false);

  useEffect(() => {
    loadUserData();
  }, []);

  const loadUserData = async () => {
    try {
      const currentUser = await User.me();
      setUser(currentUser);
      
      // Charger les pr√©f√©rences si elles existent
      if (currentUser.ai_personality) {
        setPreferences({
          ai_personality: currentUser.ai_personality || "empathique",
          communication_style: currentUser.communication_style || "doux",
          notifications: currentUser.notifications || "enabled"
        });
      }
    } catch (error) {
      console.error("Erreur chargement utilisateur:", error);
    }
  };

  const savePreferences = async () => {
    if (!user) return;
    
    setIsLoading(true);
    
    try {
      await User.updateMyUserData(preferences);
      setIsSaved(true);
      setTimeout(() => setIsSaved(false), 2000);
    } catch (error) {
      console.error("Erreur sauvegarde pr√©f√©rences:", error);
    }
    
    setIsLoading(false);
  };

  const handlePreferenceChange = (key, value) => {
    setPreferences(prev => ({
      ...prev,
      [key]: value
    }));
  };

  if (!user) {
    return (
      <div className="min-h-screen p-6" style={{ backgroundColor: 'var(--background)' }}>
        <div className="max-w-2xl mx-auto">
          <p>Chargement...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen p-6" style={{ backgroundColor: 'var(--background)' }}>
      <div className="max-w-2xl mx-auto space-y-6">
        <div className="text-center">
          <div className="w-16 h-16 mx-auto mb-4 rounded-full flex items-center justify-center"
               style={{ background: 'linear-gradient(135deg, var(--primary), #A68B5B)' }}>
            <SettingsIcon className="w-8 h-8" style={{ color: 'var(--primary-foreground)' }} />
          </div>
          <h1 className="text-3xl font-bold mb-2" style={{ color: 'var(--foreground)' }}>
            Param√®tres
          </h1>
          <p style={{ color: 'var(--muted-foreground)' }}>
            Personnalisez votre exp√©rience avec M√©diateur
          </p>
        </div>

        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <UserIcon className="w-5 h-5" style={{ color: 'var(--primary)' }} />
              Informations personnelles
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label>Nom complet</Label>
                <Input
                  value={user.full_name || ""}
                  disabled
                  className="bg-gray-50"
                  style={{
                    borderColor: 'var(--border)',
                    backgroundColor: 'var(--muted)'
                  }}
                />
              </div>
              <div>
                <Label>Email</Label>
                <Input
                  value={user.email || ""}
                  disabled
                  className="bg-gray-50"
                  style={{
                    borderColor: 'var(--border)',
                    backgroundColor: 'var(--muted)'
                  }}
                />
              </div>
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Heart className="w-5 h-5" style={{ color: 'var(--primary)' }} />
              Personnalit√© de votre confident
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div>
              <Label className="text-base font-medium">Type d'√©coute pr√©f√©r√©</Label>
              <p className="text-sm mb-3" style={{ color: 'var(--muted-foreground)' }}>
                Choisissez comment vous aimez que votre confident vous r√©ponde
              </p>
              <Select
                value={preferences.ai_personality}
                onValueChange={(value) => handlePreferenceChange("ai_personality", value)}
              >
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="empathique">
                    <div>
                      <div className="font-medium">Empathique et Chaleureux</div>
                      <div className="text-xs text-gray-500">Beaucoup d'√©motion, tr√®s bienveillant</div>
                    </div>
                  </SelectItem>
                  <SelectItem value="analytique">
                    <div>
                      <div className="font-medium">Analytique et Structur√©</div>
                      <div className="text-xs text-gray-500">Plus factuel, pose des questions pr√©cises</div>
                    </div>
                  </SelectItem>
                  <SelectItem value="sage">
                    <div>
                      <div className="font-medium">Sage et Philosophe</div>
                      <div className="text-xs text-gray-500">Prend du recul, aide √† r√©fl√©chir en profondeur</div>
                    </div>
                  </SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div>
              <Label className="text-base font-medium">Style de communication</Label>
              <p className="text-sm mb-3" style={{ color: 'var(--muted-foreground)' }}>
                Comment pr√©f√©rez-vous que votre confident s'exprime ?
              </p>
              <Select
                value={preferences.communication_style}
                onValueChange={(value) => handlePreferenceChange("communication_style", value)}
              >
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="doux">
                    <div>
                      <div className="font-medium">Doux et Patients</div>
                      <div className="text-xs text-gray-500">Prend son temps, tr√®s d√©licat</div>
                    </div>
                  </SelectItem>
                  <SelectItem value="direct">
                    <div>
                      <div className="font-medium">Direct et Efficace</div>
                      <div className="text-xs text-gray-500">Va droit au but, conseils concrets</div>
                    </div>
                  </SelectItem>
                  <SelectItem value="encourageant">
                    <div>
                      <div className="font-medium">Encourageant et Motivant</div>
                      <div className="text-xs text-gray-500">Optimiste, met l'accent sur les solutions</div>
                    </div>
                  </SelectItem>
                </SelectContent>
              </Select>
            </div>

            <Button
              onClick={savePreferences}
              disabled={isLoading}
              className="w-full"
              style={{
                backgroundColor: isSaved ? '#10b981' : 'var(--primary)',
                color: 'var(--primary-foreground)'
              }}
            >
              {isLoading ? (
                "Sauvegarde..."
              ) : isSaved ? (
                "Pr√©f√©rences sauvegard√©es ‚úì"
              ) : (
                <>
                  <Save className="w-4 h-4 mr-2" />
                  Sauvegarder mes pr√©f√©rences
                </>
              )}
            </Button>
          </CardContent>
        </Card>

        <Card style={{ backgroundColor: 'var(--muted)' }}>
          <CardContent className="p-4">
            <div className="text-center">
              <h3 className="font-semibold mb-2" style={{ color: 'var(--foreground)' }}>
                üîí Vos donn√©es sont prot√©g√©es
              </h3>
              <p className="text-sm" style={{ color: 'var(--muted-foreground)' }}>
                Toutes vos conversations sont chiffr√©es. Nous ne vendons jamais vos donn√©es 
                et respectons votre vie priv√©e.
              </p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}